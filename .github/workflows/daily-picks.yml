name: Daily Sports Picks

on:
  schedule:
    # Runs at 9:00 AM Central Time (14:00 UTC during standard time, 15:00 UTC during daylight savings)
    - cron: '0 14,15 * * *'
  # Allow manual trigger for testing
  workflow_dispatch:

jobs:
  generate-picks:
    runs-on: ubuntu-latest
    
    env:
      # Email configuration
      SMTP_USER: jakobwiley@gmail.com
      SMTP_FROM: jakobwiley@gmail.com
      SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_SECURE: false
      
      # Database configuration
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      
      # API keys
      RAPIDAPI_KEY: ${{ secrets.RAPIDAPI_KEY }}
      ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
      SPORTSDATA_API_KEY: ${{ secrets.SPORTSDATA_API_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Update Team Stats
        id: update-stats
        run: npx tsx scripts/populate-team-stats.ts
        continue-on-error: true

      - name: Check Stats Update
        if: steps.update-stats.outcome == 'failure'
        run: |
          echo "::error::Failed to update team stats"
          exit 1

      - name: Generate Predictions
        id: generate-predictions
        run: npx tsx scripts/generate-daily-predictions.ts
        continue-on-error: true

      - name: Check Predictions Generation
        if: steps.generate-predictions.outcome == 'failure'
        run: |
          echo "::error::Failed to generate predictions"
          exit 1

      - name: Send Email
        id: send-email
        run: npx tsx scripts/send-predictions-email.ts
        continue-on-error: true

      - name: Check Email Send
        if: steps.send-email.outcome == 'failure'
        run: |
          echo "::error::Failed to send email"
          exit 1

      - name: Notify on Success
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: sports-picks
          SLACK_COLOR: good
          SLACK_TITLE: Daily Picks Generated Successfully
          SLACK_MESSAGE: 'Daily picks have been generated and sent successfully!'

      - name: Notify on Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: sports-picks
          SLACK_COLOR: danger
          SLACK_TITLE: Daily Picks Generation Failed
          SLACK_MESSAGE: 'Failed to generate or send daily picks. Check the GitHub Actions logs for details.' 