import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// Canonical advanced hitter stats source: data/hitter_advanced_stats_<YEAR>.json, generated by scripts/fetch-hitter-advanced-stats.py
// This function loads and returns advanced stats for today's probable hitters only.
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

export async function fetchAdvancedHitterStats(date?: string) {
  const today = date || new Date().toISOString().slice(0, 10);
  const schedulePath = path.resolve(__dirname, '../../data/mlb_schedule_' + today + '.json');
  const schedule = JSON.parse(fs.readFileSync(schedulePath, 'utf8'));

  // Collect all probable hitters from starting lineups (assume schedule includes lineups or extend as needed)
  const hitterNames = Array.from(new Set([
    ...schedule.flatMap((g: any) => g.homeLineup || []),
    ...schedule.flatMap((g: any) => g.awayLineup || [])
  ])).filter(Boolean);

  const advancedStatsPath = path.resolve(__dirname, '../../data/hitter_advanced_stats_' + today.slice(0,4) + '.json');
  const allAdvancedStats = JSON.parse(fs.readFileSync(advancedStatsPath, 'utf8'));
  return allAdvancedStats.filter((p: any) => hitterNames.includes(p['Name']));
}
