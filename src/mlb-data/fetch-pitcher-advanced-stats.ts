import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// Canonical advanced pitcher stats source: data/pitcher_advanced_stats_<YEAR>.json, generated by scripts/fetch-pitcher-advanced-stats.py
// This function loads and returns advanced stats for today's probable pitchers only.
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

export async function fetchAdvancedPitcherStats(date?: string) {
  const today = date || new Date().toISOString().slice(0, 10);
  const schedulePath = path.resolve(__dirname, '../../data/mlb_schedule_' + today + '.json');
  const schedule = JSON.parse(fs.readFileSync(schedulePath, 'utf8'));

  const pitcherNames = Array.from(new Set([
    ...schedule.map((g: any) => g.homeProbablePitcher),
    ...schedule.map((g: any) => g.awayProbablePitcher)
  ])).filter(Boolean);

  const advancedStatsPath = path.resolve(__dirname, '../../data/pitcher_advanced_stats_' + today + '.json');
  const allAdvancedStats = JSON.parse(fs.readFileSync(advancedStatsPath, 'utf8'));
  return allAdvancedStats.filter((p: any) => pitcherNames.includes(p['Name']));
}

if (process.argv[1] === decodeURI(new URL(import.meta.url).pathname)) {
  fetchAdvancedPitcherStats().catch(console.error);
}
