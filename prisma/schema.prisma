// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ... enums ...

// Enums
enum SportType {
  NBA
  MLB
}

enum PredictionType {
  SPREAD
  MONEYLINE
  TOTAL
}

enum PredictionOutcome {
  WIN
  LOSS
  PENDING
}

enum GameStatus {
  SCHEDULED
  IN_PROGRESS
  FINAL
  POSTPONED
  CANCELLED
}

model Game {
  id              String        @id @unique
  sport           SportType
  homeTeamId      String
  awayTeamId      String
  homeTeamName    String
  awayTeamName    String
  gameDate        DateTime      @map("game_date")
  startTime       String?
  status          GameStatus    @default(SCHEDULED)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  // Odds - stored as JSON for flexibility
  oddsJson        Json?         @map("odds_json")
  
  // MLB Specific - Optional pitcher IDs
  probableHomePitcherId Int?    @map("probable_home_pitcher_id")
  probableAwayPitcherId Int?    @map("probable_away_pitcher_id")

  // Relationships
  predictions     Prediction[]

  @@map("games")
}

model Prediction {
  id              String            @id @default(uuid())
  gameId          String
  game            Game              @relation(fields: [gameId], references: [id])
  predictionType  PredictionType
  predictionValue Float
  confidence      Float
  reasoning       String
  outcome         PredictionOutcome @default(PENDING)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt

  @@map("predictions")
}
